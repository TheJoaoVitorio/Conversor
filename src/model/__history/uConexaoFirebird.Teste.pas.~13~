unit uConexaoFirebird.Teste;

interface

uses
  Vcl.StdCtrls,
  Vcl.Forms,
  System.SysUtils,
  System.Variants,
  System.Classes,
  Data.DB,
  FireDAC.Comp.Client,
  FireDAC.Stan.Intf,
  FireDAC.Stan.Error,
  FireDAC.Phys.MySQL,
  FireDAC.DApt,
  FireDAC.UI.Intf,
  FireDAC.Phys.IBBase,
  FireDAC.Phys.FB ,
  Datasnap.DBClient;

type
  TConexaoFirebird = class
    private
      FBConexao  : TFDConnection;

      fbUsername : String;
      fbPassword : String;
      fbServer   : String;
      fbPort     : String; {verificar se realmente é String ou Integer}
      fbDatabase : String;

    public
      constructor Create;
      destructor Destroy; override;

      function GetConexaoFirebird : TFDConnection;

      property FBUserName : String read fbUsername write fbUsername;
      property FBPassword : String read fbPassword write fbPassword;
      property FBServer   : String read fbServer   write fbServer;
      property FBPort     : String read fbPort     write fbPort;
      property FBDatabase : String read fbDatabase write fbDatabase;
  end;

implementation

{ TConexaoFirebird }

function TConexaoFirebird.GetConexaoFirebird : TFDConnection;
  begin
    with FBConexao do
      begin
        Params.Add('DriverID=FB');
        Params.UserName := fbUsername;
        Params.Password := fbPassword;
        Params.Database := fbDatabase;
        Params.Add('Server='+ fbServer);
        Params.Add('Port='+ fbPort);
        Connected       := True;

        Result   := FBConexao;
      end;
  end;

constructor TConexaoFirebird.Create;
  begin
    FBConexao := TFDConnection.Create(nil);
  end;

destructor TConexaoFirebird.Destroy;
  begin
    FreeAndNil(FBConexao);
    inherited;
  end;

end.
