unit uOrigemDatabaseController;

interface

uses
  Vcl.Dialogs ,
  uMySQLController.Teste, uFirebirdController.Teste, System.SysUtils;

type
  TOrigemDatabaseController = class  {Controller da unit SELECIONAR ORIGEM}
    private
      fSelecionarOrigem : String;
    public
      class function GetController : TOrigemDatabaseController;

      function TesteConexao(EscolhidoPor : String) : Boolean;   { global - essa função deve testar todas conexões }

      function TesteConexaoMySQL    : Boolean;
      function TesteConexaoFirebird : Boolean;

      property AcessarOrigem : String read fSelecionarOrigem write fSelecionarOrigem;
  end;

implementation

{ TOrigemDatabaseController }
var
  iControllerOrigemData : TOrigemDatabaseController;

class function TOrigemDatabaseController.GetController: TOrigemDatabaseController;
  begin
    if iControllerOrigemData = nil then
      iControllerOrigemData := iControllerOrigemData.Create;

    Result := iControllerOrigemData;
  end;


function TOrigemDatabaseController.TesteConexao(EscolhidoPor : String): Boolean;   {Param : Escolhido Por}
  begin
    if EscolhidoPor = 'TESTE' then
      begin

        if AcessarOrigem = 'MySQL 10.4.32' then
          begin
            if TesteConexaoMySQL = True then
              Result := True;
          end;

        if AcessarOrigem = 'Firebird 2.5.9' then
          begin
            if TesteConexaoFirebird = True then
              Result := True;
          end;

      end

    else if EscolhidoPor = 'G10' then
      ShowMessage('G10');




  end;


function TOrigemDatabaseController.TesteConexaoMySQL: Boolean; {Teste - MySQL}
  begin
    try
      if TMySQLController.GetControllerMY.AcessarConexaoMy.GetConexaoMySQL.Connected then
        begin
          ShowMessage('Conectado!');
          Result := True;
        end
      else
        begin
          ShowMessage('Não Conectado!');
          Result := False;
        end;
    except
      on E: Exception do
      begin
        ShowMessage('Erro: '+ E.Message);
        Result := False;
      end;

    end;
  end;

function TOrigemDatabaseController.TesteConexaoFirebird: Boolean; {Teste - Firebird}
  begin
    try
      if TFirebirdTesteController.GetController.AcessarConexaoFB.GetConexaoFirebird.Connected then
        begin
          ShowMessage('Conectado!');
          Result := True;
        end
      else
        begin
          ShowMessage('Não Conectado!');
          Result := False;
        end;
    except
      ShowMessage('Algo de errado acontenceu! ');
      Result := False;
    end;
  end;


initialization
  iControllerOrigemData := TOrigemDatabaseController.create

finalization
  if iControllerOrigemData <> nil then
    iControllerOrigemData.Free;


end.
